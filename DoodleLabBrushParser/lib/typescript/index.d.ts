import type { Spec } from './NativeDoodleLabBrushParser';
export interface ProcreateBrushData {
    name?: string;
    paintSize?: number;
    paintOpacity?: number;
    blendMode?: number;
    plotSmoothing?: number;
    isEraser?: number;
    isSmudge?: number;
    wetness?: number;
    charge?: number;
    flow?: number;
    jitter?: number;
    grade?: number;
    bleeding?: number;
    pressureSize?: number;
    pressureOpacity?: number;
    pressureSaturation?: number;
    pressureBrightness?: number;
    velocitySaturation?: number;
    velocityBrightness?: number;
    tilt?: number;
    tiltHardness?: number;
    tiltOpacity?: number;
    tiltAngle?: number;
    tiltSize?: number;
    tiltBleed?: number;
    tiltGradation?: number;
    shapeRotation?: number;
    shapeAzimuth?: number;
    shapeAzimuthJitter?: number;
    shapeCount?: number;
    shapeFlipX?: number;
    shapeFlipY?: number;
    shapeFlipXJitter?: number;
    shapeFlipYJitter?: number;
    shapeScaleX?: number;
    shapeScaleY?: number;
    shapeScaleJitter?: number;
    dynamicsPressureSizeCurve?: string;
    dynamicsPressureOpacityCurve?: string;
    dynamicsPressureHueCurve?: string;
    dynamicsPressureSaturationCurve?: string;
    dynamicsPressureBrightnessCurve?: string;
    dynamicsSpeedSize?: number;
    dynamicsSpeedOpacity?: number;
    dynamicsTiltSize?: number;
    dynamicsTiltOpacity?: number;
    dynamicsTiltAngle?: number;
    dynamicsTiltBrightness?: number;
    plotSpacing?: number;
    dualBlendMode?: number;
    grainBlendMode?: number;
    textureMovement?: number;
    textureContrast?: number;
    textureOrientation?: number;
    textureDepthTilt?: number;
    shapeFilter?: number;
    shapeFilterMode?: number;
    shapeInverted?: number;
    maxOpacity?: number;
    color?: string;
    shapeTextureBase64?: string;
    grainTextureBase64?: string;
    taperSize?: number;
    taperPressure?: number;
    taperEndLength?: number;
    taperSizeLinked?: number;
    lightnessJitterTilt?: number;
    saturationJitterTiltAngle?: number;
    dynamicsJitterLightness?: number;
    dynamicsJitterDarkness?: number;
    dynamicsWetnessJitter?: number;
    dynamicsMix?: number;
    dynamicsPressureMix?: number;
    dynamicsPressureSecondaryColor?: string;
    extendedBlend?: number;
    blendGammaCorrect?: number;
    previewSize?: number;
    importedFromABR?: number;
}
declare const DoodleLabBrushParser: Spec;
export default DoodleLabBrushParser;
//# sourceMappingURL=index.d.ts.map